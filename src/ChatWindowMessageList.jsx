import React from "react";
import hljs from 'highlight.js';
import { TypeAnimation } from 'react-type-animation';

function ChatWindowMessageList(props) {
    return (<div ref={props.chatContainerRef} className="message-list">
      <ul>
        {props.conversation.concat(props.images).map((chat, index) => <div>
          <li key={index} className={`chat-bubble ${chat.author.toLowerCase()}`}>
            <div style={{
              whiteSpace: "pre-wrap"
            }}>
              <strong>{chat.author}:</strong>
              {chat.author === 'DALL-E' && <img src={chat.message} alt="Generated by DALL-E" />}
              {chat.author === 'AI' && <div dangerouslySetInnerHTML={{
                __html: chat.message.replace(/```(.+?)```/gs, (match, code) => {
                  return hljs.highlightAuto(code).value;
                })
              }}></div>}
              {chat.author !== 'AI' && chat.author !== 'DALL-E' && <div>{chat.message}</div>}
            </div>
          </li>
          <div className={`timestamp ${chat.author.toLowerCase()}`}>
            <p>
              {chat.author === 'AI' && <em>Completions Token Usage: {chat.completion_tokens}. Received at </em>}
              {chat.author === 'User' && <em>Prompt Token Usage: {chat.prompt_tokens}. Sent at </em>}
              <em>{chat.timestamp.toLocaleString()}.</em>
            </p>
          </div>
        </div>)}
        {props.loading && <div>
          <li key={props.conversation.length - 1} className='chat-bubble ai'>
            <TypeAnimation sequence={['AI is typing...', 1000, '']} speed={75} deletionSpeed={75} wrapper="div" repeat={Infinity} />
          </li>
        </div>}
      </ul>
    </div>);
  }

  export default ChatWindowMessageList;